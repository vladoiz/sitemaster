# Generated by Django 4.0.10 on 2024-06-13 11:55

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import taggit.managers
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('wagtailimages', '0024_index_image_file_hash'),
        ('wagtaildocs', '0012_uploadeddocument'),
        ('activities', '0004_remove_activityblogpage_blog_activityblogpage_body_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', wagtail.fields.RichTextField(blank=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='activityindexpage',
            name='intro',
            field=wagtail.fields.RichTextField(blank=True),
        ),
        migrations.CreateModel(
            name='AchievementTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='activities.achievement')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='achievement',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='activities.AchievementTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
